plugins {
    id "de.mannodermaus.android-junit5" version "1.8.2.1"
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId 'com.nerpage.oca'
        minSdkVersion 24
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments runnerBuilder: "de.mannodermaus.junit5.AndroidJUnit5Builder"
        resConfigs "pl"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'com.google.android.material:material:1.3.0'

    //Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.1"
    androidTestImplementation("androidx.test:runner:1.5.1")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.9.1")
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.3.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.3.0")
    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task buildItemDatabase {
    doLast{
        String resDir = android.sourceSets.main.res.srcDirs[0]
        resDir += '\\raw'
        String itemsDir = android.sourceSets.main.java.srcDirs[0]
        itemsDir += '\\com\\nerpage\\oca\\itemsdb'
        def names = []
        fileTree(itemsDir).visit { FileVisitDetails details ->
            if(details.file.path.endsWith('.java')){
                names << details.file.name
            }
        }

        String namesStr = ""
        names.each{
            namesStr = namesStr + it.reverse().substring(5).reverse() + "\n"
        }
        println itemsDir
        new File(resDir, "item_list.txt").text = namesStr
    }
}

afterEvaluate{
    android.applicationVariants.all{ variant ->
        variant.javaCompiler.dependsOn(buildItemDatabase)
    }
}
